
import { Task } from '/{{ exp_js }}/task.js';

class QnaireTask extends Task {

    constructor() {
        super();
        this.disableNext();

        // indicates whether a mandatory item has been set or not
        this.mandatory = new Map();

        for (const item of this.content.querySelectorAll('.qnaire-item')) {
            if (item.dataset['optional'] === 'False') {
                this.mandatory.set(item.id, false);
                // set handlers to enable/disable the next button
                if (item.dataset['type'] === 'radio') {
                    for (const opt of item.querySelectorAll('.qnaire-opt')) {
                        const input = opt.querySelector('input');
                        /*
                           this is necessary because the browser may
                           restore values on page reload
                         */
                        if (input.checked) {
                            this.mandatory.set(item.id, true);
                        }
                        input.addEventListener('click', () => {
                            this.mandatory.set(item.id, true);
                            this.checkMandatories();
                        });
                    }
                } else if (item.dataset['type'] === 'checkbox') {
                    /*
                       NB: a mandatory checkbox question requires that
                       at least one option be checked
                     */
                    let numChecked = 0;
                    for (const opt of item.querySelectorAll('.qnaire-opt')) {
                        const input = opt.querySelector('input');
                        if (input.checked) {
                            this.mandatory.set(item.id, true);
                            numChecked += 1;
                        }
                        input.addEventListener('click', () => {
                            numChecked += input.checked ? 1 : -1;
                            this.mandatory.set(item.id,
                                               numChecked ? true : false);
                            this.checkMandatories();
                        });
                    }
                } else if (['text', 'shorttext'].includes(
                    item.dataset['type'])) {
                    const elem = ({
                        text: 'textarea',
                        shorttext: 'input'})[item.dataset['type']];
                    const input = item.querySelector(elem);
                    this.mandatory.set(item.id, Boolean(input.value));
                    input.addEventListener('input', () => {
                        this.mandatory.set(item.id, Boolean(input.value));
                        this.checkMandatories();
                    });
                } else {
                    console.log('unknown question type: ' +
                                item.dataset['type']);
                }
            }
        }
        // browser might restore all mandatory values,
        //   making it necessary to enable the Next button
        this.checkMandatories();
    }

    checkMandatories() {
        if (Array.from(this.mandatory.values()).every(val => val)) {
            const answers = this.collectAnswers();
            this.setResponse(answers);
            this.enableNext();
        } else {
            this.disableNext();
        }
    }

    collectAnswers() {
        const answers = [];
        for (const item of this.content.querySelectorAll('.qnaire-item')) {
            const itemType = item.dataset['type'];
            if (itemType === 'radio') {
                const opts = item.querySelectorAll('.qnaire-opt');
                let selected = -1;
                for (let i = 0; i < opts.length; i++) {
                    const input = opts[i].querySelector('input');
                    if (input.checked) {
                        selected = i;
                        break;
                    }
                }
                answers.push(selected);
            } else if (itemType === 'checkbox') {
                const opts = item.querySelectorAll('.qnaire-opt');
                const checked = [];
                for (let i = 0; i < opts.length; i++) {
                    const input = opts[i].querySelector('input');
                    if (input.checked) {
                        checked.push(i);
                    }
                }
                answers.push(checked);
            } else if (['text', 'shorttext'].includes(itemType)) {
                const elem = ({
                    text: 'textarea',
                    shorttext: 'input'})[itemType];
                const input = item.querySelector(elem);
                answers.push(input.value);
            }
        }
        return answers;
    }

}

export { QnaireTask as taskClass };
